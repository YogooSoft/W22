import {
  Meta,
  PageInfo,
  resultSuccess,
  getRequestToken,
  requestParams,
} from "../_util";
import { ResultEnum } from "../resultEnum";
import { createFakeUserList } from "./user";

var Mock = require("mockjs");
var Random = Mock.Random;

// rowDataFake、rowDataFake02、生成yui-table行数据
const rowDataFake: any[] = [];

for (var i = 0; i < 95; i++) {
  var age_num = Random.integer(20, 120);
  let fakeObj = {
    id: Random.id(), // id
    date: Random.datetime("yyyy-MM-dd"), // 值是指定格式的日期字符串
    name: Random.cname(), // 中文名字

    age: age_num + "岁",
    age_num: age_num,
    num: Random.integer(0, 10000),
    address: `${Random.province()}-${Random.city()}-${Random.county()}`, // 地址
  };
  // console.log(fakeObj);
  rowDataFake.push(fakeObj);
}

const rowDataFake02: any[] = [];

for (var i = 0; i < 66; i++) {
  var age_num = Random.integer(20, 120);
  var province = Random.province();
  var city = Random.city();
  let fakeObj = {
    id: Random.id(), // id
    date: Random.datetime("yyyy-MM-dd"), // 值是指定格式的日期字符串
    name: Random.cname(), // 中文名字

    age: age_num + "岁",
    age_num: age_num,
    num: Random.integer(0, 10000),
    address: `${province}-${city}-${Random.county()}`, // 地址
    province: province,
    city: city,
    zip: "11011",
  };
  // console.log(fakeObj);
  rowDataFake02.push(fakeObj);
}

// tableData、tableData2、tableData3、模拟yui-table数据
const tableData: any = {
  rowData: rowDataFake,
  // 合计数据
  getAllTotalData: {
    levelOneTotal: "100元",
    levelTwoTotal: 200,
    levelThreeTotal: 300,
  },
  headerData: [
    // {
    //   id: 100,
    //   width: "55",
    //   type: "selection",
    // },

    { slot: "expand" },

    // {
    //   id: 100,
    //   width: "55",
    //   type: "expand",
    //   fixed: true, // 固定列 true left right
    // },

    {
      id: 100,
      label: "日期",
      prop: "date",
      width: "150",
      sortable: true,
      fixed: true, // 固定列 true left right
    },
    {
      id: 210,
      label: "姓名",
      prop: "name",
      width: "120",
      sortable: true,
    },
    {
      id: 220,
      label: "地址",
      prop: "address",
      width: "300",
      sortable: true,
    },
    { slot: "age" },
    {
      id: 220,
      label: "数值",
      prop: "num",
      width: "100",
    },
  ],
  controlAtrr: {
    pageObj: {
      //分页对象
      position: "right", //分页组件位置 right left
      background: false, // 带有背景色的分页 false / true
      small: true, // 小型分页 false / true
      hide_on_single_page: false, // 当只有一页时隐藏分页
      pager_count: 5, // 设置最大页码按钮数
      page_sizes: [10, 15, 20, 30, 50, 200], // 接受一个整型数组，数组元素为展示的选择每页显示个数的选项
      layout: "total,sizes,prev, pager, next,jumper", // 表示需要显示的内容，用逗号分隔，布局元素会依次显示。
      total: rowDataFake.length, // 总条数
      pageData: {
        page: 1, // 页数
        size: 10, // 每页条数
      },
    },
  },
};

const tableData2: any = {
  rowData: [
    {
      id: 1,
      date: "2016-05-02",
      name: "王小虎",
      age: "10岁",
      age_num: "10",
      num: "9",
      address: "上海市普陀区金沙江路 1518 弄",
      province: "上海",
      city: "上海",
      zip: "11011",
      hasChildren: true,
    },
    {
      id: 2,
      date: "2016-05-04",
      name: "王大虎",
      age: "120岁",
      age_num: 20,
      num: 120,
      address: "上海市普陀区金沙江路 1517 弄",
      province: "上海",
      city: "上海",
      zip: "11011",
    },
    {
      id: 3,
      date: "2016-05-01",
      name: "王小虎",
      age: "256岁",
      age_num: 256,
      num: 26,
      address: "上海市普陀区金沙江路 1519 弄",
      province: "上海",
      city: "上海",
      zip: "11011",
      children: [
        {
          id: 31,
          date: "2016-05-01",
          name: "王小虎",
          age: "20岁",
          age_num: 20,
          num: 203,
          address: "上海市普陀区金沙江路 1519 弄",
          province: "上海",
          city: "上海",
          zip: "11011",
        },
        {
          id: 32,
          date: "2016-05-01",
          name: "王小虎",
          age: "12岁",
          age_num: 12,
          num: 132,
          address: "上海市普陀区金沙江路 1519 弄",
          province: "上海",
          city: "上海",
          zip: "11011",
        },
      ],
    },
    {
      id: 4,
      date: "2016-05-03",
      name: "王小虎",
      age: "66岁",
      age_num: 66,
      num: 345,
      address: "上海市普陀区金沙江路 1516 弄",
      hasChildren: true,
      province: "上海",
      city: "上海",
      zip: "11011",
    },
  ].concat(rowDataFake02),
  headerData: [
    {
      id: 100,
      width: "55",
      type: "selection",
    },
    {
      id: 100,
      label: "日期",
      prop: "date",
      width: "150",
      fixed: true,
    },
    {
      id: 200,
      label: "配送信息",
      prop: "",
      children: [
        {
          id: 210,
          label: "姓名",
          prop: "name",
          width: "120",
          fixed: true,
        },
        {
          id: 200,
          label: "地址",
          prop: "",
          children: [
            {
              id: 210,
              label: "省份",
              prop: "province",
              width: "120",
            },
            {
              id: 220,
              label: "城市",
              prop: "city",
              width: "120",
            },
            {
              id: 230,
              label: "详细地址",
              prop: "address",
              width: "300",
            },
            {
              id: 240,
              label: "邮编",
              prop: "zip",
              width: "120",
            },
          ],
        },
      ],
    },
  ],
  controlAtrr: {
    pageObj: {
      //分页对象
      position: "left", //分页组件位置 right left
      background: false, // 带有背景色的分页 false / true
      small: false, // 小型分页 false / true
      hide_on_single_page: false, // 当只有一页时隐藏分页
      pager_count: 8, // 设置最大页码按钮数
      page_sizes: [10, 15, 20, 30, 50, 200], // 接受一个整型数组，数组元素为展示的选择每页显示个数的选项
      layout: "total,sizes,prev, pager, next,jumper", // 表示需要显示的内容，用逗号分隔，布局元素会依次显示。
      total: rowDataFake02.length, // 总条数
      pageData: {
        page: 1, // 页数
        size: 10, // 每页条数
      },
    },
  },
};

const tableData3: any = {
  rowData: [
    {
      date: "2016-05-02",
      userId: "admin",
      userName: "管理员",
      tel: "10",
      cardType: 1,
    },
    {
      date: "2016-05-03",
      userId: "Mary",
      userName: "玛丽",
      tel: "20",
      cardType: 2,
    },
  ],
  headerData: [
    { slot: "date" },
    { label: "名称", prop: "userId" },
    { label: "链接", prop: "userName" },
    { slot: "cardType" },
    { slot: "operate" },
  ],
};

const es_info: any = {
  data: {
    total: 6,
    online: 3,
    green: 1,
    yellow: 2,
    red: 0,
    unknown: 0,
  },
};

const logstash_info: any = {
  data: {
    total: 10,
    online: 8,
    offline: 2,
  },
};

const beat_info: any = {
  data: {
    total: 15,
    online: 10,
    offline: 5,
    abnormal: 1,
  },
};
// xoc es下拉选择框模拟数据
const es_list: any = {
  data: [
    {
      id: 1,
      name: "xoc",
    },
    {
      id: 3,
      name: "ES8",
    },
    {
      id: 4,
      name: "ES-7.8.1-兼容test",
    },
    {
      id: 6,
      name: "ES-6test",
    },
    {
      id: 10,
      name: "国元测试集群",
    },
    {
      id: 12,
      name: "werwer",
    },
  ],
};

// xoc Elasticsearch集群 echarts图表模拟数据（IO）
const io_echarts_data: any = {
  data: [
    {
      name: "xoc",
      data: {
        interval: "30m",
        timestamp: [
          1686454140000, 1686455940000, 1686457740000, 1686459540000,
          1686461340000, 1686463140000, 1686464940000, 1686466740000,
          1686468540000, 1686470340000, 1686472140000, 1686473940000,
          1686475740000, 1686477540000, 1686479340000, 1686481140000,
          1686482940000, 1686484740000, 1686486540000, 1686488340000,
          1686490140000, 1686491940000, 1686493740000, 1686495540000,
          1686497340000, 1686499140000, 1686500940000, 1686502740000,
          1686504540000, 1686506340000, 1686508140000, 1686509940000,
          1686511740000, 1686513540000, 1686515340000, 1686517140000,
          1686518940000, 1686520740000, 1686522540000, 1686524340000,
          1686526140000, 1686527940000, 1686529740000, 1686531540000,
          1686533340000, 1686535140000, 1686536940000, 1686538740000,
          1686540540000,
        ],
        time_format: [
          "2023-06-11 11:29:00",
          "2023-06-11 11:59:00",
          "2023-06-11 12:29:00",
          "2023-06-11 12:59:00",
          "2023-06-11 13:29:00",
          "2023-06-11 13:59:00",
          "2023-06-11 14:29:00",
          "2023-06-11 14:59:00",
          "2023-06-11 15:29:00",
          "2023-06-11 15:59:00",
          "2023-06-11 16:29:00",
          "2023-06-11 16:59:00",
          "2023-06-11 17:29:00",
          "2023-06-11 17:59:00",
          "2023-06-11 18:29:00",
          "2023-06-11 18:59:00",
          "2023-06-11 19:29:00",
          "2023-06-11 19:59:00",
          "2023-06-11 20:29:00",
          "2023-06-11 20:59:00",
          "2023-06-11 21:29:00",
          "2023-06-11 21:59:00",
          "2023-06-11 22:29:00",
          "2023-06-11 22:59:00",
          "2023-06-11 23:29:00",
          "2023-06-11 23:59:00",
          "2023-06-12 00:29:00",
          "2023-06-12 00:59:00",
          "2023-06-12 01:29:00",
          "2023-06-12 01:59:00",
          "2023-06-12 02:29:00",
          "2023-06-12 02:59:00",
          "2023-06-12 03:29:00",
          "2023-06-12 03:59:00",
          "2023-06-12 04:29:00",
          "2023-06-12 04:59:00",
          "2023-06-12 05:29:00",
          "2023-06-12 05:59:00",
          "2023-06-12 06:29:00",
          "2023-06-12 06:59:00",
          "2023-06-12 07:29:00",
          "2023-06-12 07:59:00",
          "2023-06-12 08:29:00",
          "2023-06-12 08:59:00",
          "2023-06-12 09:29:00",
          "2023-06-12 09:59:00",
          "2023-06-12 10:29:00",
          "2023-06-12 10:59:00",
          "2023-06-12 11:29:00",
        ],
        search_rates: [
          null,
          null,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.65,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.63,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.12,
          7.49,
          0.63,
          0.65,
          0.64,
          0.64,
          0.69,
          0.74,
        ],
        indexing_rates_pri: [
          null,
          null,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          10.73,
          53.43,
          55.6,
          2.16,
          -1251.28,
          55.2,
          55.2,
          59.79,
        ],
        indexing_rates_tot: [
          null,
          null,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          10.73,
          53.43,
          55.6,
          2.16,
          -1251.28,
          55.2,
          55.2,
          59.79,
        ],
        search_latency: [
          null,
          null,
          0.63,
          0.62,
          0.64,
          0.63,
          0.59,
          0.66,
          0.64,
          0.59,
          0.52,
          0.44,
          0.63,
          0.86,
          0.9,
          0.86,
          0.88,
          0.95,
          1.03,
          0.99,
          1.01,
          1.09,
          0.98,
          0.79,
          0.64,
          0.58,
          0.55,
          0.57,
          0.56,
          0.56,
          0.51,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.54,
          0.47,
          0.89,
          0.03,
          -7.14,
          1.0,
          4.7,
          1.96,
        ],
        indexing_latency: [
          null,
          null,
          0.13,
          0.14,
          0.13,
          0.14,
          0.11,
          0.12,
          0.13,
          0.13,
          0.13,
          0.13,
          0.12,
          0.12,
          0.12,
          0.13,
          0.14,
          0.15,
          0.12,
          0.11,
          0.12,
          0.13,
          0.14,
          0.13,
          0.14,
          0.12,
          0.12,
          0.12,
          0.14,
          0.14,
          0.14,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.11,
          0.11,
          0.12,
          0.12,
          0.13,
          0.12,
          0.12,
          0.51,
        ],
      },
    },
    {
      name: "ES8",
      data: {},
    },
    {
      name: "werwer",
      data: {
        interval: "30m",
        timestamp: [
          1686454140000, 1686455940000, 1686457740000, 1686459540000,
          1686461340000, 1686463140000, 1686464940000, 1686466740000,
          1686468540000, 1686470340000, 1686472140000, 1686473940000,
          1686475740000, 1686477540000, 1686479340000, 1686481140000,
          1686482940000, 1686484740000, 1686486540000, 1686488340000,
          1686490140000, 1686491940000, 1686493740000, 1686495540000,
          1686497340000, 1686499140000, 1686500940000, 1686502740000,
          1686504540000, 1686506340000, 1686508140000, 1686509940000,
          1686511740000, 1686513540000, 1686515340000, 1686517140000,
          1686518940000, 1686520740000, 1686522540000, 1686524340000,
          1686526140000, 1686527940000, 1686529740000, 1686531540000,
          1686533340000, 1686535140000, 1686536940000, 1686538740000,
          1686540540000,
        ],
        time_format: [
          "2023-06-11 11:29:00",
          "2023-06-11 11:59:00",
          "2023-06-11 12:29:00",
          "2023-06-11 12:59:00",
          "2023-06-11 13:29:00",
          "2023-06-11 13:59:00",
          "2023-06-11 14:29:00",
          "2023-06-11 14:59:00",
          "2023-06-11 15:29:00",
          "2023-06-11 15:59:00",
          "2023-06-11 16:29:00",
          "2023-06-11 16:59:00",
          "2023-06-11 17:29:00",
          "2023-06-11 17:59:00",
          "2023-06-11 18:29:00",
          "2023-06-11 18:59:00",
          "2023-06-11 19:29:00",
          "2023-06-11 19:59:00",
          "2023-06-11 20:29:00",
          "2023-06-11 20:59:00",
          "2023-06-11 21:29:00",
          "2023-06-11 21:59:00",
          "2023-06-11 22:29:00",
          "2023-06-11 22:59:00",
          "2023-06-11 23:29:00",
          "2023-06-11 23:59:00",
          "2023-06-12 00:29:00",
          "2023-06-12 00:59:00",
          "2023-06-12 01:29:00",
          "2023-06-12 01:59:00",
          "2023-06-12 02:29:00",
          "2023-06-12 02:59:00",
          "2023-06-12 03:29:00",
          "2023-06-12 03:59:00",
          "2023-06-12 04:29:00",
          "2023-06-12 04:59:00",
          "2023-06-12 05:29:00",
          "2023-06-12 05:59:00",
          "2023-06-12 06:29:00",
          "2023-06-12 06:59:00",
          "2023-06-12 07:29:00",
          "2023-06-12 07:59:00",
          "2023-06-12 08:29:00",
          "2023-06-12 08:59:00",
          "2023-06-12 09:29:00",
          "2023-06-12 09:59:00",
          "2023-06-12 10:29:00",
          "2023-06-12 10:59:00",
          "2023-06-12 11:29:00",
        ],
        search_rates: [
          null,
          null,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.65,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.64,
          0.63,
          0.63,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.12,
          7.49,
          0.63,
          0.65,
          0.64,
          0.64,
          0.69,
          0.74,
        ],
        indexing_rates_pri: [
          null,
          null,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          10.73,
          53.43,
          55.6,
          2.16,
          -1251.28,
          55.2,
          55.2,
          59.79,
        ],
        indexing_rates_tot: [
          null,
          null,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          55.2,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          10.73,
          53.43,
          55.6,
          2.16,
          -1251.28,
          55.2,
          55.2,
          59.79,
        ],
        search_latency: [
          null,
          null,
          0.63,
          0.62,
          0.64,
          0.63,
          0.59,
          0.66,
          0.64,
          0.59,
          0.52,
          0.44,
          0.63,
          0.86,
          0.9,
          0.86,
          0.88,
          0.95,
          1.03,
          0.99,
          1.01,
          1.09,
          0.98,
          0.79,
          0.64,
          0.58,
          0.55,
          0.57,
          0.56,
          0.56,
          0.51,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.54,
          0.47,
          0.89,
          0.03,
          -7.14,
          1.0,
          4.7,
          1.96,
        ],
        indexing_latency: [
          null,
          null,
          0.13,
          0.14,
          0.13,
          0.14,
          0.11,
          0.12,
          0.13,
          0.13,
          0.13,
          0.13,
          0.12,
          0.12,
          0.12,
          0.13,
          0.14,
          0.15,
          0.12,
          0.11,
          0.12,
          0.13,
          0.14,
          0.13,
          0.14,
          0.12,
          0.12,
          0.12,
          0.14,
          0.14,
          0.14,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          0.11,
          0.11,
          0.12,
          0.12,
          0.13,
          0.12,
          0.12,
          0.51,
        ],
      },
    },
  ],
};
// xoc Elasticsearch集群 logstash图表模拟数据（IO）
const io_logstash_data: any = {
  data: [
    {
      es_cluster: "xoc",
      logstash_nodes: [
        {
          node: "yogoo-s9-s07",
          interval: "30m",
          timestamp: [
            1686616320000, 1686618120000, 1686619920000, 1686621720000,
            1686623520000, 1686625320000, 1686627120000, 1686628920000,
            1686630720000, 1686632520000, 1686634320000, 1686636120000,
            1686637920000, 1686639720000, 1686641520000, 1686643320000,
            1686645120000, 1686646920000, 1686648720000, 1686650520000,
            1686652320000, 1686654120000, 1686655920000, 1686657720000,
            1686659520000, 1686661320000, 1686663120000, 1686664920000,
            1686666720000, 1686668520000, 1686670320000, 1686672120000,
            1686673920000, 1686675720000, 1686677520000, 1686679320000,
            1686681120000, 1686682920000, 1686684720000, 1686686520000,
            1686688320000, 1686690120000, 1686691920000, 1686693720000,
            1686695520000, 1686697320000, 1686699120000, 1686700920000,
            1686702720000,
          ],
          time_format: [
            "2023-06-13 08:32:00",
            "2023-06-13 09:02:00",
            "2023-06-13 09:32:00",
            "2023-06-13 10:02:00",
            "2023-06-13 10:32:00",
            "2023-06-13 11:02:00",
            "2023-06-13 11:32:00",
            "2023-06-13 12:02:00",
            "2023-06-13 12:32:00",
            "2023-06-13 13:02:00",
            "2023-06-13 13:32:00",
            "2023-06-13 14:02:00",
            "2023-06-13 14:32:00",
            "2023-06-13 15:02:00",
            "2023-06-13 15:32:00",
            "2023-06-13 16:02:00",
            "2023-06-13 16:32:00",
            "2023-06-13 17:02:00",
            "2023-06-13 17:32:00",
            "2023-06-13 18:02:00",
            "2023-06-13 18:32:00",
            "2023-06-13 19:02:00",
            "2023-06-13 19:32:00",
            "2023-06-13 20:02:00",
            "2023-06-13 20:32:00",
            "2023-06-13 21:02:00",
            "2023-06-13 21:32:00",
            "2023-06-13 22:02:00",
            "2023-06-13 22:32:00",
            "2023-06-13 23:02:00",
            "2023-06-13 23:32:00",
            "2023-06-14 00:02:00",
            "2023-06-14 00:32:00",
            "2023-06-14 01:02:00",
            "2023-06-14 01:32:00",
            "2023-06-14 02:02:00",
            "2023-06-14 02:32:00",
            "2023-06-14 03:02:00",
            "2023-06-14 03:32:00",
            "2023-06-14 04:02:00",
            "2023-06-14 04:32:00",
            "2023-06-14 05:02:00",
            "2023-06-14 05:32:00",
            "2023-06-14 06:02:00",
            "2023-06-14 06:32:00",
            "2023-06-14 07:02:00",
            "2023-06-14 07:32:00",
            "2023-06-14 08:02:00",
            "2023-06-14 08:32:00",
          ],
          events_in_rates: [
            null,
            null,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.05,
            5.6,
            7.28,
            7.25,
            7.25,
            7.24,
            7.24,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.2,
            7.24,
            7.28,
            7.24,
            7.24,
            7.23,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.25,
            7.24,
            7.21,
            7.28,
            7.24,
            7.24,
            7.25,
            7.25,
          ],
          events_out_rates: [
            null,
            null,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.18,
            5.6,
            7.28,
            7.25,
            7.25,
            7.24,
            7.24,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.2,
            7.24,
            7.28,
            7.24,
            7.24,
            7.23,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.25,
            7.24,
            7.21,
            7.24,
            7.28,
            7.24,
            7.25,
            7.25,
          ],
          event_latency: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            572048.51,
            87.98,
            80.65,
            77.15,
            76.17,
            77.4,
            76.81,
            81.74,
            80.05,
            78.58,
            85.96,
            79.76,
            79.62,
            75.69,
            76.37,
            75.29,
            74.14,
            71.57,
            74.83,
            75.02,
            73.93,
            72.42,
            74.06,
            75.55,
            76.51,
            75.54,
            77.88,
            76.14,
            73.68,
            77.51,
            73.08,
          ],
          max_heap: [
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9,
          ],
          used_heap: [
            464.7, 461.3, 446.5, 458.2, 463.8, 468.4, 442.4, 452.6, 464.3,
            473.5, 447.1, 451.2, 457.1, 469.1, 455.6, 451.5, 470.5, 527.0,
            512.1, 513.5, 507.9, 509.7, 513.4, 506.8, 513.5, 509.4, 509.7,
            516.1, 506.4, 511.2, 509.5, 510.1, 514.8, 505.7, 511.5, 513.1,
            507.4, 512.6, 510.4, 509.6, 513.9, 506.9, 513.3, 510.5, 508.7,
            516.4, 506.1, 510.7, 449.1,
          ],
          heap_unit: "MB",
          cpu: [
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
          ],
          load: [
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.1",
            "0.1",
            "0.0",
            "0.1",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
          ],
        },
      ],
      interval: 1800,
      timestamp: [
        1686616320000, 1686618120000, 1686619920000, 1686621720000,
        1686623520000, 1686625320000, 1686627120000, 1686628920000,
        1686630720000, 1686632520000, 1686634320000, 1686636120000,
        1686637920000, 1686639720000, 1686641520000, 1686643320000,
        1686645120000, 1686646920000, 1686648720000, 1686650520000,
        1686652320000, 1686654120000, 1686655920000, 1686657720000,
        1686659520000, 1686661320000, 1686663120000, 1686664920000,
        1686666720000, 1686668520000, 1686670320000, 1686672120000,
        1686673920000, 1686675720000, 1686677520000, 1686679320000,
        1686681120000, 1686682920000, 1686684720000, 1686686520000,
        1686688320000, 1686690120000, 1686691920000, 1686693720000,
        1686695520000, 1686697320000, 1686699120000, 1686700920000,
        1686702720000,
      ],
      time_format: [
        "2023-06-13 08:32:00",
        "2023-06-13 09:02:00",
        "2023-06-13 09:32:00",
        "2023-06-13 10:02:00",
        "2023-06-13 10:32:00",
        "2023-06-13 11:02:00",
        "2023-06-13 11:32:00",
        "2023-06-13 12:02:00",
        "2023-06-13 12:32:00",
        "2023-06-13 13:02:00",
        "2023-06-13 13:32:00",
        "2023-06-13 14:02:00",
        "2023-06-13 14:32:00",
        "2023-06-13 15:02:00",
        "2023-06-13 15:32:00",
        "2023-06-13 16:02:00",
        "2023-06-13 16:32:00",
        "2023-06-13 17:02:00",
        "2023-06-13 17:32:00",
        "2023-06-13 18:02:00",
        "2023-06-13 18:32:00",
        "2023-06-13 19:02:00",
        "2023-06-13 19:32:00",
        "2023-06-13 20:02:00",
        "2023-06-13 20:32:00",
        "2023-06-13 21:02:00",
        "2023-06-13 21:32:00",
        "2023-06-13 22:02:00",
        "2023-06-13 22:32:00",
        "2023-06-13 23:02:00",
        "2023-06-13 23:32:00",
        "2023-06-14 00:02:00",
        "2023-06-14 00:32:00",
        "2023-06-14 01:02:00",
        "2023-06-14 01:32:00",
        "2023-06-14 02:02:00",
        "2023-06-14 02:32:00",
        "2023-06-14 03:02:00",
        "2023-06-14 03:32:00",
        "2023-06-14 04:02:00",
        "2023-06-14 04:32:00",
        "2023-06-14 05:02:00",
        "2023-06-14 05:32:00",
        "2023-06-14 06:02:00",
        "2023-06-14 06:32:00",
        "2023-06-14 07:02:00",
        "2023-06-14 07:32:00",
        "2023-06-14 08:02:00",
        "2023-06-14 08:32:00",
      ],
      events_in_rates: [
        null,
        null,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        5.6,
        7.28,
        7.25,
        7.25,
        7.24,
        7.24,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.2,
        7.24,
        7.28,
        7.24,
        7.24,
        7.23,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.25,
        7.24,
        7.21,
        7.28,
        7.24,
        7.24,
        7.25,
        7.25,
      ],
      events_out_rates: [
        null,
        null,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.18,
        5.6,
        7.28,
        7.25,
        7.25,
        7.24,
        7.24,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.2,
        7.24,
        7.28,
        7.24,
        7.24,
        7.23,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.25,
        7.24,
        7.21,
        7.24,
        7.28,
        7.24,
        7.25,
        7.25,
      ],
      event_latency: [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        572048.51,
        87.98,
        80.65,
        77.15,
        76.17,
        77.4,
        76.81,
        81.74,
        80.05,
        78.58,
        85.96,
        79.76,
        79.62,
        75.69,
        76.37,
        75.29,
        74.14,
        71.57,
        74.83,
        75.02,
        73.93,
        72.42,
        74.06,
        75.55,
        76.51,
        75.54,
        77.88,
        76.14,
        73.68,
        77.51,
        73.08,
      ],
    },
    {
      es_cluster: "werwer",
      logstash_nodes: [
        {
          node: "yogoo-s9-s07",
          interval: "30m",
          timestamp: [
            1686616320000, 1686618120000, 1686619920000, 1686621720000,
            1686623520000, 1686625320000, 1686627120000, 1686628920000,
            1686630720000, 1686632520000, 1686634320000, 1686636120000,
            1686637920000, 1686639720000, 1686641520000, 1686643320000,
            1686645120000, 1686646920000, 1686648720000, 1686650520000,
            1686652320000, 1686654120000, 1686655920000, 1686657720000,
            1686659520000, 1686661320000, 1686663120000, 1686664920000,
            1686666720000, 1686668520000, 1686670320000, 1686672120000,
            1686673920000, 1686675720000, 1686677520000, 1686679320000,
            1686681120000, 1686682920000, 1686684720000, 1686686520000,
            1686688320000, 1686690120000, 1686691920000, 1686693720000,
            1686695520000, 1686697320000, 1686699120000, 1686700920000,
            1686702720000,
          ],
          time_format: [
            "2023-06-13 08:32:00",
            "2023-06-13 09:02:00",
            "2023-06-13 09:32:00",
            "2023-06-13 10:02:00",
            "2023-06-13 10:32:00",
            "2023-06-13 11:02:00",
            "2023-06-13 11:32:00",
            "2023-06-13 12:02:00",
            "2023-06-13 12:32:00",
            "2023-06-13 13:02:00",
            "2023-06-13 13:32:00",
            "2023-06-13 14:02:00",
            "2023-06-13 14:32:00",
            "2023-06-13 15:02:00",
            "2023-06-13 15:32:00",
            "2023-06-13 16:02:00",
            "2023-06-13 16:32:00",
            "2023-06-13 17:02:00",
            "2023-06-13 17:32:00",
            "2023-06-13 18:02:00",
            "2023-06-13 18:32:00",
            "2023-06-13 19:02:00",
            "2023-06-13 19:32:00",
            "2023-06-13 20:02:00",
            "2023-06-13 20:32:00",
            "2023-06-13 21:02:00",
            "2023-06-13 21:32:00",
            "2023-06-13 22:02:00",
            "2023-06-13 22:32:00",
            "2023-06-13 23:02:00",
            "2023-06-13 23:32:00",
            "2023-06-14 00:02:00",
            "2023-06-14 00:32:00",
            "2023-06-14 01:02:00",
            "2023-06-14 01:32:00",
            "2023-06-14 02:02:00",
            "2023-06-14 02:32:00",
            "2023-06-14 03:02:00",
            "2023-06-14 03:32:00",
            "2023-06-14 04:02:00",
            "2023-06-14 04:32:00",
            "2023-06-14 05:02:00",
            "2023-06-14 05:32:00",
            "2023-06-14 06:02:00",
            "2023-06-14 06:32:00",
            "2023-06-14 07:02:00",
            "2023-06-14 07:32:00",
            "2023-06-14 08:02:00",
            "2023-06-14 08:32:00",
          ],
          events_in_rates: [
            null,
            null,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.05,
            5.6,
            7.28,
            7.25,
            7.25,
            7.24,
            7.24,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.2,
            7.24,
            7.28,
            7.24,
            7.24,
            7.23,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.25,
            7.24,
            7.21,
            7.28,
            7.24,
            7.24,
            7.25,
            7.25,
          ],
          events_out_rates: [
            null,
            null,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.18,
            5.6,
            7.28,
            7.25,
            7.25,
            7.24,
            7.24,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.2,
            7.24,
            7.28,
            7.24,
            7.24,
            7.23,
            7.24,
            7.24,
            7.24,
            7.25,
            7.24,
            7.25,
            7.24,
            7.21,
            7.24,
            7.28,
            7.24,
            7.25,
            7.25,
          ],
          event_latency: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            572048.51,
            87.98,
            80.65,
            77.15,
            76.17,
            77.4,
            76.81,
            81.74,
            80.05,
            78.58,
            85.96,
            79.76,
            79.62,
            75.69,
            76.37,
            75.29,
            74.14,
            71.57,
            74.83,
            75.02,
            73.93,
            72.42,
            74.06,
            75.55,
            76.51,
            75.54,
            77.88,
            76.14,
            73.68,
            77.51,
            73.08,
          ],
          max_heap: [
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9, 989.9,
            989.9, 989.9, 989.9, 989.9,
          ],
          used_heap: [
            464.7, 461.3, 446.5, 458.2, 463.8, 468.4, 442.4, 452.6, 464.3,
            473.5, 447.1, 451.2, 457.1, 469.1, 455.6, 451.5, 470.5, 527.0,
            512.1, 513.5, 507.9, 509.7, 513.4, 506.8, 513.5, 509.4, 509.7,
            516.1, 506.4, 511.2, 509.5, 510.1, 514.8, 505.7, 511.5, 513.1,
            507.4, 512.6, 510.4, 509.6, 513.9, 506.9, 513.3, 510.5, 508.7,
            516.4, 506.1, 510.7, 449.1,
          ],
          heap_unit: "MB",
          cpu: [
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
          ],
          load: [
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.1",
            "0.1",
            "0.0",
            "0.1",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.1",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
            "0.0",
          ],
        },
      ],
      interval: 1800,
      timestamp: [
        1686616320000, 1686618120000, 1686619920000, 1686621720000,
        1686623520000, 1686625320000, 1686627120000, 1686628920000,
        1686630720000, 1686632520000, 1686634320000, 1686636120000,
        1686637920000, 1686639720000, 1686641520000, 1686643320000,
        1686645120000, 1686646920000, 1686648720000, 1686650520000,
        1686652320000, 1686654120000, 1686655920000, 1686657720000,
        1686659520000, 1686661320000, 1686663120000, 1686664920000,
        1686666720000, 1686668520000, 1686670320000, 1686672120000,
        1686673920000, 1686675720000, 1686677520000, 1686679320000,
        1686681120000, 1686682920000, 1686684720000, 1686686520000,
        1686688320000, 1686690120000, 1686691920000, 1686693720000,
        1686695520000, 1686697320000, 1686699120000, 1686700920000,
        1686702720000,
      ],
      time_format: [
        "2023-06-13 08:32:00",
        "2023-06-13 09:02:00",
        "2023-06-13 09:32:00",
        "2023-06-13 10:02:00",
        "2023-06-13 10:32:00",
        "2023-06-13 11:02:00",
        "2023-06-13 11:32:00",
        "2023-06-13 12:02:00",
        "2023-06-13 12:32:00",
        "2023-06-13 13:02:00",
        "2023-06-13 13:32:00",
        "2023-06-13 14:02:00",
        "2023-06-13 14:32:00",
        "2023-06-13 15:02:00",
        "2023-06-13 15:32:00",
        "2023-06-13 16:02:00",
        "2023-06-13 16:32:00",
        "2023-06-13 17:02:00",
        "2023-06-13 17:32:00",
        "2023-06-13 18:02:00",
        "2023-06-13 18:32:00",
        "2023-06-13 19:02:00",
        "2023-06-13 19:32:00",
        "2023-06-13 20:02:00",
        "2023-06-13 20:32:00",
        "2023-06-13 21:02:00",
        "2023-06-13 21:32:00",
        "2023-06-13 22:02:00",
        "2023-06-13 22:32:00",
        "2023-06-13 23:02:00",
        "2023-06-13 23:32:00",
        "2023-06-14 00:02:00",
        "2023-06-14 00:32:00",
        "2023-06-14 01:02:00",
        "2023-06-14 01:32:00",
        "2023-06-14 02:02:00",
        "2023-06-14 02:32:00",
        "2023-06-14 03:02:00",
        "2023-06-14 03:32:00",
        "2023-06-14 04:02:00",
        "2023-06-14 04:32:00",
        "2023-06-14 05:02:00",
        "2023-06-14 05:32:00",
        "2023-06-14 06:02:00",
        "2023-06-14 06:32:00",
        "2023-06-14 07:02:00",
        "2023-06-14 07:32:00",
        "2023-06-14 08:02:00",
        "2023-06-14 08:32:00",
      ],
      events_in_rates: [
        null,
        null,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        5.6,
        7.28,
        7.25,
        7.25,
        7.24,
        7.24,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.2,
        7.24,
        7.28,
        7.24,
        7.24,
        7.23,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.25,
        7.24,
        7.21,
        7.28,
        7.24,
        7.24,
        7.25,
        7.25,
      ],
      events_out_rates: [
        null,
        null,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.18,
        5.6,
        7.28,
        7.25,
        7.25,
        7.24,
        7.24,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.2,
        7.24,
        7.28,
        7.24,
        7.24,
        7.23,
        7.24,
        7.24,
        7.24,
        7.25,
        7.24,
        7.25,
        7.24,
        7.21,
        7.24,
        7.28,
        7.24,
        7.25,
        7.25,
      ],
      event_latency: [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        572048.51,
        87.98,
        80.65,
        77.15,
        76.17,
        77.4,
        76.81,
        81.74,
        80.05,
        78.58,
        85.96,
        79.76,
        79.62,
        75.69,
        76.37,
        75.29,
        74.14,
        71.57,
        74.83,
        75.02,
        73.93,
        72.42,
        74.06,
        75.55,
        76.51,
        75.54,
        77.88,
        76.14,
        73.68,
        77.51,
        73.08,
      ],
    },
  ],
};

// xoc/diagnose/items
const diagnose_items: any = {
  data: [
    {
      id: 1,
      name: "集群健康",
    },
    {
      id: 2,
      name: "集群配置-disk watermark",
    },
    {
      id: 3,
      name: "集群配置-索引删除保护",
    },
    {
      id: 4,
      name: "集群角色",
    },
    {
      id: 5,
      name: "节点配置-mem、disk一致性",
    },
    {
      id: 6,
      name: "同类型角色jvm堆一致",
    },
    {
      id: 7,
      name: "禁用swap",
    },
    {
      id: 8,
      name: "线程池异常",
    },
    {
      id: 9,
      name: "gc异常",
    },
    {
      id: 10,
      name: "磁盘使用率",
    },
    {
      id: 11,
      name: "节点分片数",
    },
    {
      id: 12,
      name: "索引分片大小",
    },
    {
      id: 13,
      name: "副本设置",
    },
    {
      id: 14,
      name: "索引settings-optimize",
    },
    {
      id: 15,
      name: "索引mappings-数量",
    },
    {
      id: 16,
      name: "索引mappings-text类型",
    },
    {
      id: 17,
      name: "段文件数目",
    },
    {
      id: 18,
      name: "索引settings-delayed",
    },
  ],
};

// xoc/diagnose/run
const diagnose_run: any = {
  data: {
    cluster_name: "xoc",
    id: 369,
    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    task_create_time: "2023-06-12T15:27:10",
    status: 0,
    auto: 0,
    task_id: "8ab73494-08f2-11ee-a01e-9f6b0d8ae386",
    create_user: "wangyf",
    task_finish_time: null,
  },
};

// /xoc/diagnose/cancel_task
const cancel_task: any = {
  data: {
    cluster_name: "xoc",
    id: 370,
    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    task_create_time: "2023-06-12T15:30:18",
    status: 3,
    auto: 0,
    task_id: "fb0eeaca-08f2-11ee-a01e-9f6b0d8ae386",
    create_user: "wangyf",
    task_finish_time: "2023-06-12T15:30:28",
  },
};

// xoc/diagnose/get_task",
const diagnose_get_task: any = {
  data: {
    cluster_name: "xoc",
    id: 369,
    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    task_create_time: "2023-06-12T15:27:10",
    status: 1,
    auto: 0,
    task_id: "8ab73494-08f2-11ee-a01e-9f6b0d8ae386",
    create_user: "wangyf",
    task_finish_time: "2023-06-12T15:27:18",
  },
};

// xoc/switch_auto
const switch_auto: any = {
  data: {
    auto: 0,
    id: 1,
    schedule_time: "9:0",
    update_time: "2023-06-12T15:26:59",
    cluster_name: "xoc",
    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    create_time: "2022-11-24T16:16:50",
  },
};

// xoc/auto_settings
const auto_settings: any = {
  data: {
    auto: 1,
    id: 1,
    schedule_time: "11:0",
    update_time: "2023-06-12 15:35:38",
    cluster_name: "xoc",
    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    create_time: "2022-11-24 16:16:50",
  },
};

// xoc/report
const report: any = {
  data: {
    task_id: "fb0eeaca-08f2-11ee-a01e-9f6b0d8ae386",
    cluster_name: "xoc",
    diagnose_results: {
      "3": {},
      "6": {
        info: "集群磁盘阈值开启-true。低水位线-85%，高水位线-92%，洪灾阶段-95%",
      },
      "8": {
        info: "destructive_requires_name:false",
      },
      "10": {
        info: "集群主节点为1个，非独立主节点个数为1。",
      },
      "13": {
        data: [
          {
            cpu: "27",
            disk: "50.0 GB",
            roles: "dilmrt",
            memory: "7.6 GB",
            status: 0,
            disk_num: 53660876800,
            node_name: "node-1",
            memory_num: 8189485056,
          },
        ],
        info: "",
        headers: [
          {
            prop: "roles",
            label: "角色",
            width: "100",
          },
          {
            prop: "node_name",
            label: "节点名称",
            width: "150",
          },
          {
            prop: "cpu",
            label: "CPU",
            width: "100",
          },
          {
            prop: "memory",
            label: "Memory",
            width: "150",
            prop_num: "memory_num",
          },
          {
            prop: "disk",
            label: "Disk",
            width: "150",
            prop_num: "disk_num",
          },
          {
            prop: "status",
            label: "状态",
            width: "100",
          },
        ],
      },
      "15": {},
      "17": {
        info: "所有节点均已禁用swap。",
      },
      "19": {},
      "21": {},
      "22": {
        info: "磁盘使用超过水位线的节点：['node-1']",
      },
      "25": {},
      "27": {
        data: [],
        info: "",
        headers: [
          {
            prop: "index",
            label: "索引名",
            width: "300",
          },
          {
            prop: "primary",
            label: "主分片数",
            width: "150",
          },
          {
            prop: "sugggest_shards",
            label: "推荐分片数",
            width: "150",
          },
          {
            prop: "primary_size",
            label: "主分片总大小",
            width: "150",
          },
        ],
      },
      "28": {
        data: [
          {
            index: ".monitoring-es-7-2023.06.07",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.08",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.06",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.06",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.07",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".apm-custom-link",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.08",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".kibana_task_manager_1",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.09",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".tasks",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.10",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.11",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-kibana-7-2023.06.12",
            primary: "1",
            replicas: "0",
          },
          {
            index: "kibana_sample_data_flights",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".security-7",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".async-search",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-logstash-7-2023.06.12",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".apm-agent-configuration",
            primary: "1",
            replicas: "0",
          },
          {
            index: "kibana_sample_data_ecommerce",
            primary: "1",
            replicas: "0",
          },
          {
            index: "kibana_sample_data_logs",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".kibana-event-log-7.9.3-000022",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.10",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.11",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.12",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".kibana_1",
            primary: "1",
            replicas: "0",
          },
          {
            index: ".monitoring-es-7-2023.06.09",
            primary: "1",
            replicas: "0",
          },
          {
            index: "edw-dowjonestoes-v1",
            primary: "1",
            replicas: "0",
          },
        ],
        info: "",
        headers: [
          {
            prop: "index",
            label: "索引名",
            width: "300",
          },
          {
            prop: "primary",
            label: "主分片数",
            width: "150",
          },
          {
            prop: "replicas",
            label: "副本数",
            width: "150",
          },
        ],
      },
      "30": {
        data: [
          {
            index: "metricbeat-7.9.3-2023.02.17",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.05",
            primary: "1",
          },
          {
            index: "edw-dowjonestoes-v111",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.06",
            primary: "1",
          },
          {
            index: "elastalert_error",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.14",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.27",
            primary: "1",
          },
          {
            index: "my_msg",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.19",
            primary: "1",
          },
          {
            index: "kibana_sample_data_ecommerce",
            primary: "1",
          },
          {
            index: "nginx-access01-2022.07.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.30",
            primary: "1",
          },
          {
            index: "filebeat-7.17.5-2022.07.22-000001",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.13",
            primary: "1",
          },
          {
            index: "elastalert",
            primary: "1",
          },
          {
            index: "xoc_wg_stats",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.14",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.08",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.04",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2022.12.31",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.23",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.10",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.12",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.26",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.06",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.18",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.01",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.19",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.23",
            primary: "1",
          },
          {
            index: "xoc-wg-stats-v2",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.07",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.10",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.09",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.09",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.27",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.15",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.03",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.20",
            primary: "1",
          },
          {
            index: "logs-index_pattern_placeholder",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.08",
            primary: "1",
          },
          {
            index: "kibana_sample_data_logs",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.11",
            primary: "1",
          },
          {
            index: "test-log",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.07",
            primary: "1",
          },
          {
            index: "huatai-paixu001",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.06",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.31",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.20",
            primary: "1",
          },
          {
            index: "matching-test-v1-8888",
            primary: "1",
          },
          {
            index: "edw-dowjonestoes-v12222",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.03",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.04",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.26",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.09",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.16",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.03",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.24",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.07",
            primary: "1",
          },
          {
            index: "testlog",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.27",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.31",
            primary: "1",
          },
          {
            index: "nginx-access-2022.07.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.17",
            primary: "1",
          },
          {
            index: "kibana_sample_data_flights",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.06",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.28",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.29",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.24",
            primary: "1",
          },
          {
            index: "huatai-paixu",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.09",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.16",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2022.12.29",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.26",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.20",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.19",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.08",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.02",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.20",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.06.12",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.01",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.03",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.25",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.05.31",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.23",
            primary: "1",
          },
          {
            index: "test-log0001",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.21",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.02",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.12",
            primary: "1",
          },
          {
            index: "gavin-test",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2022.12.30",
            primary: "1",
          },
          {
            index: "test_float",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.04",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.08",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.14",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.15",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.28",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.13",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.10",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.12",
            primary: "1",
          },
          {
            index: "iip-test_single",
            primary: "1",
          },
          {
            index: "metrics-index_pattern_placeholder",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.28",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.11",
            primary: "1",
          },
          {
            index: "test-alert",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.25",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.22",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.05",
            primary: "1",
          },
          {
            index: "spaninfo",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2022.12.20",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.05",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.18",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.30",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.15",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.05",
            primary: "1",
          },
          {
            index: "elastalert_silence",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.02.11",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.01",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.07",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.25",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.13",
            primary: "1",
          },
          {
            index: "edw-dowjonestoes-v2",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.16",
            primary: "1",
          },
          {
            index: "j_h_matching-v1",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.02",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.17",
            primary: "1",
          },
          {
            index: "j_h_matching",
            primary: "1",
          },
          {
            index: "elastalert_status",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.14",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.13",
            primary: "1",
          },
          {
            index: "edw-dowjonestoes-v1",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.18",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.21",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.24",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.04",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.03.21",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.11",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.01.10",
            primary: "1",
          },
          {
            index: "metricbeat-7.9.3-2023.04.12",
            primary: "1",
          },
        ],
        info: "",
        headers: [
          {
            prop: "index",
            label: "索引名",
            width: "300",
          },
          {
            prop: "primary",
            label: "主分片数",
            width: "150",
          },
        ],
      },
      "32": {},
      "34": {
        data: [
          {
            index: "metricbeat-7.9.3-2023.01.01",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.24",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.24",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.17",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.28",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.02",
            mappings: 3821,
          },
          {
            index: "filebeat-7.17.5-2022.07.22-000001",
            mappings: 6908,
          },
          {
            index: "metricbeat-7.9.3-2023.01.27",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.12",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.08",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.06",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.19",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.27",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2022.12.31",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.03",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.06",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.05",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.07",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.16",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.18",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.02",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.20",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.08",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.31",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.07",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.09",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.03",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.20",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.12",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.05",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.31",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.15",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.06",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.11",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.18",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.13",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.15",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.03",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.14",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.23",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.04",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.24",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.15",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.19",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.04",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.10",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.05",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.19",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.27",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.09",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.13",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2022.12.29",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.11",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.29",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.14",
            mappings: 3821,
          },
          {
            index: "elastalert",
            mappings: 230,
          },
          {
            index: "metricbeat-7.9.3-2023.03.22",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.01",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.23",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.13",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.26",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.06",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.09",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.01",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.22",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.07",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.20",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.25",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.09",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.07",
            mappings: 3821,
          },
          {
            index: "j_h_matching",
            mappings: 119,
          },
          {
            index: "metricbeat-7.9.3-2023.04.05",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.05.31",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.16",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.02",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.25",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.04",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.10",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.08",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.26",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.11",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.17",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.13",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.04",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.23",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.25",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.14",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.10",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.12",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.26",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.08",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.21",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.10",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2022.12.30",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.03",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.30",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.16",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.18",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.22",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.28",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.22",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.03.21",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2022.12.20",
            mappings: 3821,
          },
          {
            index: "j_h_matching-v1",
            mappings: 103,
          },
          {
            index: "metricbeat-7.9.3-2023.03.11",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.28",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.14",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.12",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.04.20",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.17",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.01.30",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.02.21",
            mappings: 3821,
          },
          {
            index: "metricbeat-7.9.3-2023.06.12",
            mappings: 3821,
          },
        ],
        info: "",
        headers: [
          {
            prop: "index",
            label: "索引名",
            width: "300",
          },
          {
            prop: "mappings",
            label: "字段数",
            width: "150",
          },
        ],
      },
      "37": {},
      "39": {
        data: [],
        info: "",
        headers: [
          {
            prop: "index",
            label: "索引名",
            width: "300",
          },
          {
            prop: "shard",
            label: "分片",
            width: "150",
          },
          {
            prop: "primary",
            label: "是否主分片",
            width: "150",
          },
          {
            prop: "segments",
            label: "段数",
            width: "150",
          },
          {
            prop: "suggest_segments",
            label: "推荐段数",
            width: "150",
          },
        ],
      },
    },
    create_time: "2023/06/12 15:30:28",
    diagnose_items: [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    ],
    id: 351,
    status: 1,
    auto: 0,
    risk_report: {
      高风险巡检项: [
        {
          item_id: 1,
          item_name: "集群健康",
          item_desc: null,
          check_result: "集群状态为yellow，且数据节点数为1个。",
          table_show: false,
          has_table: false,
          result_id: 3,
          result_severity: 2,
          result_explain:
            "yellow表示集群中存在尚未分配的副分片，集群仍然可用（读写正常）。由于主分片和副本无法分配到同一个节点，所以无法分配副本。",
          suggestion: "扩容数据节点。",
        },
        {
          item_id: 14,
          item_name: "索引settings-optimize",
          item_desc: null,
          check_result: "部分索引未做基础写优化配置 ",
          table_show: true,
          has_table: true,
          result_id: 30,
          result_severity: 2,
          result_explain: "",
          suggestion:
            "将refresh_interval改为 30s；将 translog.durability 改为 async \n                    以及 translog.sync_interval 改为 10s 或以上。另外可以通过 index template 的方法将该基础优化固化到所有索引中。 \n        参考文档： \n        ? https://www.elastic.co/guide/en/elasticsearch/reference/7.9/dynamic.html",
          headers: [
            {
              prop: "index",
              label: "索引名",
              width: "300",
            },
            {
              prop: "primary",
              label: "主分片数",
              width: "150",
            },
          ],
          table_data: [
            {
              index: "metricbeat-7.9.3-2023.02.17",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.05",
              primary: "1",
            },
            {
              index: "edw-dowjonestoes-v111",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.06",
              primary: "1",
            },
            {
              index: "elastalert_error",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.14",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.27",
              primary: "1",
            },
            {
              index: "my_msg",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.19",
              primary: "1",
            },
            {
              index: "kibana_sample_data_ecommerce",
              primary: "1",
            },
            {
              index: "nginx-access01-2022.07.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.30",
              primary: "1",
            },
            {
              index: "filebeat-7.17.5-2022.07.22-000001",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.13",
              primary: "1",
            },
            {
              index: "elastalert",
              primary: "1",
            },
            {
              index: "xoc_wg_stats",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.14",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.08",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.04",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2022.12.31",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.23",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.10",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.12",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.26",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.06",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.18",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.01",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.19",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.23",
              primary: "1",
            },
            {
              index: "xoc-wg-stats-v2",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.07",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.10",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.09",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.09",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.27",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.15",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.03",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.20",
              primary: "1",
            },
            {
              index: "logs-index_pattern_placeholder",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.08",
              primary: "1",
            },
            {
              index: "kibana_sample_data_logs",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.11",
              primary: "1",
            },
            {
              index: "test-log",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.07",
              primary: "1",
            },
            {
              index: "huatai-paixu001",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.06",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.31",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.20",
              primary: "1",
            },
            {
              index: "matching-test-v1-8888",
              primary: "1",
            },
            {
              index: "edw-dowjonestoes-v12222",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.03",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.04",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.26",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.09",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.16",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.03",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.24",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.07",
              primary: "1",
            },
            {
              index: "testlog",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.27",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.31",
              primary: "1",
            },
            {
              index: "nginx-access-2022.07.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.17",
              primary: "1",
            },
            {
              index: "kibana_sample_data_flights",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.06",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.28",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.29",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.24",
              primary: "1",
            },
            {
              index: "huatai-paixu",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.09",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.16",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2022.12.29",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.26",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.20",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.19",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.08",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.02",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.20",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.06.12",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.01",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.03",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.25",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.05.31",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.23",
              primary: "1",
            },
            {
              index: "test-log0001",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.21",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.02",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.12",
              primary: "1",
            },
            {
              index: "gavin-test",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2022.12.30",
              primary: "1",
            },
            {
              index: "test_float",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.04",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.08",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.14",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.15",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.28",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.13",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.10",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.12",
              primary: "1",
            },
            {
              index: "iip-test_single",
              primary: "1",
            },
            {
              index: "metrics-index_pattern_placeholder",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.28",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.11",
              primary: "1",
            },
            {
              index: "test-alert",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.25",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.22",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.05",
              primary: "1",
            },
            {
              index: "spaninfo",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2022.12.20",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.05",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.18",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.30",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.15",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.05",
              primary: "1",
            },
            {
              index: "elastalert_silence",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.02.11",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.01",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.07",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.25",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.13",
              primary: "1",
            },
            {
              index: "edw-dowjonestoes-v2",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.16",
              primary: "1",
            },
            {
              index: "j_h_matching-v1",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.02",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.17",
              primary: "1",
            },
            {
              index: "j_h_matching",
              primary: "1",
            },
            {
              index: "elastalert_status",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.14",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.13",
              primary: "1",
            },
            {
              index: "edw-dowjonestoes-v1",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.18",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.21",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.24",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.04",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.03.21",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.11",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.01.10",
              primary: "1",
            },
            {
              index: "metricbeat-7.9.3-2023.04.12",
              primary: "1",
            },
          ],
        },
      ],
      低风险巡检项: [
        {
          item_id: 3,
          item_name: "集群配置-索引删除保护",
          item_desc: null,
          check_result:
            "未禁用使用通配符删除索引 destructive_requires_name:false",
          table_show: false,
          has_table: false,
          result_id: 8,
          result_severity: 1,
          result_explain: "",
          suggestion:
            "按照如下方式设置该参数值：\n        PUT _cluster/settings \n        { \n        persistent : { \n        action.destructive_requires_name : true \n        } \n        }",
        },
        {
          item_id: 4,
          item_name: "集群角色",
          item_desc: null,
          check_result:
            "集群节点角色分配有待优化 集群主节点为1个，非独立主节点个数为1。",
          table_show: false,
          has_table: false,
          result_id: 10,
          result_severity: 1,
          result_explain: null,
          suggestion: "当节点数大于 5 个时，建议设置独立主节点(及协调节点)",
        },
        {
          item_id: 10,
          item_name: "磁盘使用率",
          item_desc: null,
          check_result:
            "节点磁盘使用率超过低水位线 磁盘使用超过水位线的节点：['node-1']",
          table_show: false,
          has_table: false,
          result_id: 22,
          result_severity: 1,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 13,
          item_name: "副本设置",
          item_desc: null,
          check_result: "存在副本为0或副本超过2个的索引 ",
          table_show: true,
          has_table: true,
          result_id: 28,
          result_severity: 1,
          result_explain:
            "没有副本无法提供数据冗余来保证高可用；副本太多会增加写入负载",
          suggestion:
            "可以基于如下 指令来设置相关索引的副本数，一般设为 1 就可以了：\n        PUT /twitter/_settings \n        { \n        index : { \n        number_of_replicas : 1\n        } \n        }",
          headers: [
            {
              prop: "index",
              label: "索引名",
              width: "300",
            },
            {
              prop: "primary",
              label: "主分片数",
              width: "150",
            },
            {
              prop: "replicas",
              label: "副本数",
              width: "150",
            },
          ],
          table_data: [
            {
              index: ".monitoring-es-7-2023.06.07",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.08",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.06",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.06",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.07",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".apm-custom-link",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.08",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".kibana_task_manager_1",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.09",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".tasks",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.10",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.11",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-kibana-7-2023.06.12",
              primary: "1",
              replicas: "0",
            },
            {
              index: "kibana_sample_data_flights",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".security-7",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".async-search",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-logstash-7-2023.06.12",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".apm-agent-configuration",
              primary: "1",
              replicas: "0",
            },
            {
              index: "kibana_sample_data_ecommerce",
              primary: "1",
              replicas: "0",
            },
            {
              index: "kibana_sample_data_logs",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".kibana-event-log-7.9.3-000022",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.10",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.11",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.12",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".kibana_1",
              primary: "1",
              replicas: "0",
            },
            {
              index: ".monitoring-es-7-2023.06.09",
              primary: "1",
              replicas: "0",
            },
            {
              index: "edw-dowjonestoes-v1",
              primary: "1",
              replicas: "0",
            },
          ],
        },
        {
          item_id: 15,
          item_name: "索引mappings-数量",
          item_desc: null,
          check_result: "部分索引的未合理设定分片延迟分配配置",
          table_show: false,
          has_table: false,
          result_id: 32,
          result_severity: 1,
          result_explain: "",
          suggestion:
            "建议将 index.unassigned.node_left.delayed_timeout 值设为小时级别，留出充足的时间来处理 down 掉的节点，如: \n        index.unassigned.node_left.delayed_timeout: 48h\n        参考文档： \n        ? https://www.elastic.co/guide/en/elasticsearch/reference/7.9/delayed-allocation.html",
        },
        {
          item_id: 16,
          item_name: "索引mappings-text类型",
          item_desc: null,
          check_result: "部分索引mappings过多 ",
          table_show: true,
          has_table: true,
          result_id: 34,
          result_severity: 1,
          result_explain: "",
          suggestion:
            "需要重新进行数据建模，通过只保留合理的字段、拆分索引等方式减少字段数。",
          headers: [
            {
              prop: "index",
              label: "索引名",
              width: "300",
            },
            {
              prop: "mappings",
              label: "字段数",
              width: "150",
            },
          ],
          table_data: [
            {
              index: "metricbeat-7.9.3-2023.01.01",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.24",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.24",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.17",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.28",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.02",
              mappings: 3821,
            },
            {
              index: "filebeat-7.17.5-2022.07.22-000001",
              mappings: 6908,
            },
            {
              index: "metricbeat-7.9.3-2023.01.27",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.12",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.08",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.06",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.19",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.27",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2022.12.31",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.03",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.06",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.05",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.07",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.16",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.18",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.02",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.20",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.08",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.31",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.07",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.09",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.03",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.20",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.12",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.05",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.31",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.15",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.06",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.11",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.18",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.13",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.15",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.03",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.14",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.23",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.04",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.24",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.15",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.19",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.04",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.10",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.05",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.19",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.27",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.09",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.13",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2022.12.29",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.11",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.29",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.14",
              mappings: 3821,
            },
            {
              index: "elastalert",
              mappings: 230,
            },
            {
              index: "metricbeat-7.9.3-2023.03.22",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.01",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.23",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.13",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.26",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.06",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.09",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.01",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.22",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.07",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.20",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.25",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.09",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.07",
              mappings: 3821,
            },
            {
              index: "j_h_matching",
              mappings: 119,
            },
            {
              index: "metricbeat-7.9.3-2023.04.05",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.05.31",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.16",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.02",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.25",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.04",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.10",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.08",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.26",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.11",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.17",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.13",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.04",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.23",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.25",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.14",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.10",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.12",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.26",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.08",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.21",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.10",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2022.12.30",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.03",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.30",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.16",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.18",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.22",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.28",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.22",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.03.21",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2022.12.20",
              mappings: 3821,
            },
            {
              index: "j_h_matching-v1",
              mappings: 103,
            },
            {
              index: "metricbeat-7.9.3-2023.03.11",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.28",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.14",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.12",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.04.20",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.17",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.01.30",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.02.21",
              mappings: 3821,
            },
            {
              index: "metricbeat-7.9.3-2023.06.12",
              mappings: 3821,
            },
          ],
        },
      ],
      安全巡检项: [
        {
          item_id: 2,
          item_name: "集群配置-disk watermark",
          item_desc: null,
          check_result:
            "已修改磁盘水位线的默认阈值 集群磁盘阈值开启-true。低水位线-85%，高水位线-92%，洪灾阶段-95%",
          table_show: false,
          has_table: false,
          result_id: 6,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 5,
          item_name: "节点配置-mem、disk一致性",
          item_desc: null,
          check_result: "数据节点硬件配置一致 ",
          table_show: true,
          has_table: true,
          result_id: 13,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
          headers: [
            {
              prop: "roles",
              label: "角色",
              width: "100",
            },
            {
              prop: "node_name",
              label: "节点名称",
              width: "150",
            },
            {
              prop: "cpu",
              label: "CPU",
              width: "100",
            },
            {
              prop: "memory",
              label: "Memory",
              width: "150",
              prop_num: "memory_num",
            },
            {
              prop: "disk",
              label: "Disk",
              width: "150",
              prop_num: "disk_num",
            },
            {
              prop: "status",
              label: "状态",
              width: "100",
            },
          ],
          table_data: [
            {
              cpu: "27",
              disk: "50.0 GB",
              roles: "dilmrt",
              memory: "7.6 GB",
              status: 0,
              disk_num: 53660876800,
              node_name: "node-1",
              memory_num: 8189485056,
            },
          ],
        },
        {
          item_id: 6,
          item_name: "同类型角色jvm堆一致",
          item_desc: null,
          check_result: "各角色节点的JVM heap设置一致",
          table_show: false,
          has_table: false,
          result_id: 15,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 7,
          item_name: "禁用swap",
          item_desc: null,
          check_result: "已禁用swap分区 所有节点均已禁用swap。",
          table_show: false,
          has_table: false,
          result_id: 17,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 8,
          item_name: "线程池异常",
          item_desc: null,
          check_result: "线程池使用情况正常",
          table_show: false,
          has_table: false,
          result_id: 19,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 9,
          item_name: "gc异常",
          item_desc: null,
          check_result: "GC使用情况正常",
          table_show: false,
          has_table: false,
          result_id: 21,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 11,
          item_name: "节点分片数",
          item_desc: null,
          check_result: "数据节点分片数目正常",
          table_show: false,
          has_table: false,
          result_id: 25,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 12,
          item_name: "索引分片大小",
          item_desc: null,
          check_result: "分片大小合理 ",
          table_show: false,
          has_table: false,
          result_id: 27,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 17,
          item_name: "段文件数目",
          item_desc: null,
          check_result: "索引的text字段的mappings正常配置",
          table_show: false,
          has_table: false,
          result_id: 37,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
        {
          item_id: 18,
          item_name: "索引settings-delayed",
          item_desc: null,
          check_result: "分片段文件数量正常 ",
          table_show: false,
          has_table: false,
          result_id: 39,
          result_severity: 0,
          result_explain: "",
          suggestion: "",
        },
      ],
    },
    high_risks: 2,
    low_risks: 6,
    no_risks: 10,
    summary: "已经影响或即将影响集群的可用性，建议立即查看和处理",
  },
};

// diagnose/history_runtime
const history_runtime: any = {
  data: [
    {
      label: "2023年06月12日",
      children: [
        {
          label: "2023-06-12 15:30:28 【手动】",
          report_time: "2023-06-12T15:30:28",
          auto: 0,
          status: 1,
        },
        {
          label: "2023-06-12 15:27:18 【手动】",
          report_time: "2023-06-12T15:27:18",
          auto: 0,
          status: 1,
        },
        {
          label: "2023-06-12 09:00:10 【自动】",
          report_time: "2023-06-12T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月11日",
      children: [
        {
          label: "2023-06-11 09:00:14 【自动】",
          report_time: "2023-06-11T09:00:14",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月10日",
      children: [
        {
          label: "2023-06-10 09:00:10 【自动】",
          report_time: "2023-06-10T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月09日",
      children: [
        {
          label: "2023-06-09 09:00:10 【自动】",
          report_time: "2023-06-09T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月08日",
      children: [
        {
          label: "2023-06-08 09:00:10 【自动】",
          report_time: "2023-06-08T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月07日",
      children: [
        {
          label: "2023-06-07 09:00:10 【自动】",
          report_time: "2023-06-07T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月06日",
      children: [
        {
          label: "2023-06-06 09:00:10 【自动】",
          report_time: "2023-06-06T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月05日",
      children: [
        {
          label: "2023-06-05 09:00:12 【自动】",
          report_time: "2023-06-05T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月04日",
      children: [
        {
          label: "2023-06-04 09:00:09 【自动】",
          report_time: "2023-06-04T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月03日",
      children: [
        {
          label: "2023-06-03 09:00:13 【自动】",
          report_time: "2023-06-03T09:00:13",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月02日",
      children: [
        {
          label: "2023-06-02 09:00:11 【自动】",
          report_time: "2023-06-02T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年06月01日",
      children: [
        {
          label: "2023-06-01 09:00:10 【自动】",
          report_time: "2023-06-01T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月31日",
      children: [
        {
          label: "2023-05-31 09:00:10 【自动】",
          report_time: "2023-05-31T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月30日",
      children: [
        {
          label: "2023-05-30 09:00:14 【自动】",
          report_time: "2023-05-30T09:00:14",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月29日",
      children: [
        {
          label: "2023-05-29 09:00:10 【自动】",
          report_time: "2023-05-29T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月28日",
      children: [
        {
          label: "2023-05-28 09:00:11 【自动】",
          report_time: "2023-05-28T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月27日",
      children: [
        {
          label: "2023-05-27 09:00:10 【自动】",
          report_time: "2023-05-27T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月26日",
      children: [
        {
          label: "2023-05-26 09:00:12 【自动】",
          report_time: "2023-05-26T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月25日",
      children: [
        {
          label: "2023-05-25 09:00:09 【自动】",
          report_time: "2023-05-25T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月24日",
      children: [
        {
          label: "2023-05-24 09:00:12 【自动】",
          report_time: "2023-05-24T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月23日",
      children: [
        {
          label: "2023-05-23 09:00:10 【自动】",
          report_time: "2023-05-23T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月22日",
      children: [
        {
          label: "2023-05-22 09:00:09 【自动】",
          report_time: "2023-05-22T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月21日",
      children: [
        {
          label: "2023-05-21 09:00:10 【自动】",
          report_time: "2023-05-21T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月20日",
      children: [
        {
          label: "2023-05-20 09:00:11 【自动】",
          report_time: "2023-05-20T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月19日",
      children: [
        {
          label: "2023-05-19 09:00:11 【自动】",
          report_time: "2023-05-19T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月18日",
      children: [
        {
          label: "2023-05-18 09:00:10 【自动】",
          report_time: "2023-05-18T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月17日",
      children: [
        {
          label: "2023-05-17 09:00:09 【自动】",
          report_time: "2023-05-17T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月16日",
      children: [
        {
          label: "2023-05-16 09:00:10 【自动】",
          report_time: "2023-05-16T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月15日",
      children: [
        {
          label: "2023-05-15 09:00:10 【自动】",
          report_time: "2023-05-15T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月14日",
      children: [
        {
          label: "2023-05-14 09:00:11 【自动】",
          report_time: "2023-05-14T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月13日",
      children: [
        {
          label: "2023-05-13 09:00:10 【自动】",
          report_time: "2023-05-13T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月12日",
      children: [
        {
          label: "2023-05-12 09:00:11 【自动】",
          report_time: "2023-05-12T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月11日",
      children: [
        {
          label: "2023-05-11 09:00:11 【自动】",
          report_time: "2023-05-11T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月10日",
      children: [
        {
          label: "2023-05-10 09:00:11 【自动】",
          report_time: "2023-05-10T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月09日",
      children: [
        {
          label: "2023-05-09 09:00:16 【自动】",
          report_time: "2023-05-09T09:00:16",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月08日",
      children: [
        {
          label: "2023-05-08 09:00:13 【自动】",
          report_time: "2023-05-08T09:00:13",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月07日",
      children: [
        {
          label: "2023-05-07 09:00:13 【自动】",
          report_time: "2023-05-07T09:00:13",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月06日",
      children: [
        {
          label: "2023-05-06 09:00:14 【自动】",
          report_time: "2023-05-06T09:00:14",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月05日",
      children: [
        {
          label: "2023-05-05 09:00:11 【自动】",
          report_time: "2023-05-05T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月04日",
      children: [
        {
          label: "2023-05-04 09:00:10 【自动】",
          report_time: "2023-05-04T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月03日",
      children: [
        {
          label: "2023-05-03 09:00:11 【自动】",
          report_time: "2023-05-03T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月02日",
      children: [
        {
          label: "2023-05-02 09:00:13 【自动】",
          report_time: "2023-05-02T09:00:13",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年05月01日",
      children: [
        {
          label: "2023-05-01 09:00:10 【自动】",
          report_time: "2023-05-01T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月30日",
      children: [
        {
          label: "2023-04-30 09:00:12 【自动】",
          report_time: "2023-04-30T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月29日",
      children: [
        {
          label: "2023-04-29 09:00:12 【自动】",
          report_time: "2023-04-29T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月28日",
      children: [
        {
          label: "2023-04-28 09:00:07 【自动】",
          report_time: "2023-04-28T09:00:07",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月27日",
      children: [
        {
          label: "2023-04-27 09:00:11 【自动】",
          report_time: "2023-04-27T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月26日",
      children: [
        {
          label: "2023-04-26 09:00:10 【自动】",
          report_time: "2023-04-26T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月25日",
      children: [
        {
          label: "2023-04-25 09:00:13 【自动】",
          report_time: "2023-04-25T09:00:13",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月24日",
      children: [
        {
          label: "2023-04-24 09:00:09 【自动】",
          report_time: "2023-04-24T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月23日",
      children: [
        {
          label: "2023-04-23 09:00:11 【自动】",
          report_time: "2023-04-23T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月22日",
      children: [
        {
          label: "2023-04-22 09:00:10 【自动】",
          report_time: "2023-04-22T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月21日",
      children: [
        {
          label: "2023-04-21 09:00:12 【自动】",
          report_time: "2023-04-21T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月20日",
      children: [
        {
          label: "2023-04-20 09:00:09 【自动】",
          report_time: "2023-04-20T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月19日",
      children: [
        {
          label: "2023-04-19 09:00:12 【自动】",
          report_time: "2023-04-19T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月18日",
      children: [
        {
          label: "2023-04-18 09:00:11 【自动】",
          report_time: "2023-04-18T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月17日",
      children: [
        {
          label: "2023-04-17 09:00:12 【自动】",
          report_time: "2023-04-17T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月16日",
      children: [
        {
          label: "2023-04-16 09:00:10 【自动】",
          report_time: "2023-04-16T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月15日",
      children: [
        {
          label: "2023-04-15 09:00:11 【自动】",
          report_time: "2023-04-15T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月14日",
      children: [
        {
          label: "2023-04-14 09:00:09 【自动】",
          report_time: "2023-04-14T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月13日",
      children: [
        {
          label: "2023-04-13 09:00:10 【自动】",
          report_time: "2023-04-13T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月12日",
      children: [
        {
          label: "2023-04-12 09:00:09 【自动】",
          report_time: "2023-04-12T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月11日",
      children: [
        {
          label: "2023-04-11 09:00:09 【自动】",
          report_time: "2023-04-11T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月10日",
      children: [
        {
          label: "2023-04-10 09:00:10 【自动】",
          report_time: "2023-04-10T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月09日",
      children: [
        {
          label: "2023-04-09 09:00:12 【自动】",
          report_time: "2023-04-09T09:00:12",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月08日",
      children: [
        {
          label: "2023-04-08 09:00:11 【自动】",
          report_time: "2023-04-08T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月07日",
      children: [
        {
          label: "2023-04-07 09:00:09 【自动】",
          report_time: "2023-04-07T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月06日",
      children: [
        {
          label: "2023-04-06 09:00:11 【自动】",
          report_time: "2023-04-06T09:00:11",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月05日",
      children: [
        {
          label: "2023-04-05 09:00:10 【自动】",
          report_time: "2023-04-05T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月04日",
      children: [
        {
          label: "2023-04-04 09:00:09 【自动】",
          report_time: "2023-04-04T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月03日",
      children: [
        {
          label: "2023-04-03 09:00:10 【自动】",
          report_time: "2023-04-03T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月02日",
      children: [
        {
          label: "2023-04-02 09:00:10 【自动】",
          report_time: "2023-04-02T09:00:10",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年04月01日",
      children: [
        {
          label: "2023-04-01 09:00:09 【自动】",
          report_time: "2023-04-01T09:00:09",
          auto: 1,
          status: 1,
        },
      ],
    },
    {
      label: "2023年03月31日",
      children: [
        {
          label: "2023-03-31 16:51:25 【手动】",
          report_time: "2023-03-31T16:51:25",
          auto: 0,
          status: 1,
        },
      ],
    },
  ],
};

// diagnose/history_runtime
const diagnose_risks_trends: any = {
  data: {
    dates: [
      "06-05",
      "06-06",
      "06-07",
      "06-08",
      "06-09",
      "06-10",
      "06-11",
      "06-12",
    ],
    high_risks: [2, 2, 2, 2, 2, 2, 2, 2],
    low_risks: [6, 6, 6, 6, 6, 6, 6, 6],
    no_risks: [10, 10, 10, 10, 10, 10, 10, 10],
  },
};

// diagnose/history_runtime
const diagnose_last_7d: any = {
  data: {
    count: 10,
    risks: [
      {
        name: "索引settings-optimize",
        high_count: 10,
        low_count: 0,
      },
      {
        name: "集群健康",
        high_count: 10,
        low_count: 0,
      },
      {
        name: "副本设置",
        high_count: 0,
        low_count: 10,
      },
      {
        name: "磁盘使用率",
        high_count: 0,
        low_count: 10,
      },
      {
        name: "索引mappings-text类型",
        high_count: 0,
        low_count: 10,
      },
      {
        name: "索引mappings-数量",
        high_count: 0,
        low_count: 10,
      },
      {
        name: "集群角色",
        high_count: 0,
        low_count: 10,
      },
      {
        name: "集群配置-索引删除保护",
        high_count: 0,
        low_count: 10,
      },
    ],
  },
};

export default [
  // GetUserMenuInfo
  {
    url: "/api/data/tableData",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }
      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(tableData, meta, pageInfo);
    },
  },

  {
    url: "/api/data/2tableData",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      // console.log("===request.body==",option.body)
      const { page, size } = option.body;
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }
      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      tableData2["controlAtrr"]["pageObj"]["pageData"]["page"] = page;
      tableData2["controlAtrr"]["pageObj"]["pageData"]["size"] = size;
      // console.log(tableData2['rowData'])
      var reTableData2 = JSON.parse(JSON.stringify(tableData2));
      reTableData2["rowData"] = reTableData2.rowData.slice(
        (page - 1) * size,
        page * size
      ); // 10,20
      // console.log(reTableData2['rowData'])
      return resultSuccess(reTableData2, meta, pageInfo);
    },
  },

  {
    url: "/api/data/3tableData",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }
      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(tableData3, meta, pageInfo);
    },
  },

  {
    url: "/api/data/es_info",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(es_info, meta, pageInfo);
    },
  },
  {
    url: "/api/data/logstash_info",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(logstash_info, meta, pageInfo);
    },
  },

  {
    url: "/api/data/beat_info",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(beat_info, meta, pageInfo);
    },
  },

  // xoc es下拉选择框模拟数据
  {
    url: "/api/data/get_es_id",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(es_list, meta, pageInfo);
    },
  },

  // xoc Elasticsearch集群 echarts图表模拟数据（IO）
  {
    url: "/api/data/es_iocharts",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(io_echarts_data, meta, pageInfo);
    },
  },

  {
    url: "/api/data/diagnose_items",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(diagnose_items, meta, pageInfo);
    },
  },

  {
    url: "/api/data/diagnose_run",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(diagnose_run, meta, pageInfo);
    },
  },

  {
    url: "/api/data/cancel_task",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(cancel_task, meta, pageInfo);
    },
  },

  {
    url: "/api/data/diagnose_get_task",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(diagnose_get_task, meta, pageInfo);
    },
  },

  {
    url: "/api/data/switch_auto",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(switch_auto, meta, pageInfo);
    },
  },

  {
    url: "/api/data/auto_settings",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(auto_settings, meta, pageInfo);
    },
  },
  {
    url: "/api/data/report",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(report, meta, pageInfo);
    },
  },

  {
    url: "/api/data/history_runtime",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(history_runtime, meta, pageInfo);
    },
  },

  {
    url: "/api/data/diagnose_risks_trends",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(diagnose_risks_trends, meta, pageInfo);
    },
  },

  {
    url: "/api/data/diagnose_last_7d",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(diagnose_last_7d, meta, pageInfo);
    },
  },

  {
    url: "/api/data/io_logstash_data",
    timeout: 200,
    type: "post",
    //response: ({config}) => {
    response: function (option: any) {
      const meta: Meta = {
        code: ResultEnum.INVALID_TOKEN,
        message: "Invalid token!",
        success: true,
      };
      const pageInfo: PageInfo = {
        PageNum: "",
        PageSize: "",
        Pages: "",
        Total: "",
      };
      const token = getRequestToken(option);
      //console.log("--------------/api/menu/usermenu----------------",token);
      if (!token) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Incorrect account or password！";
        return resultSuccess(null, meta, pageInfo);
      }
      const checkUser = createFakeUserList().find(
        (item) => item.token === token
      );
      if (!checkUser) {
        meta.code = ResultEnum.SUCCESS;
        meta.success = true;
        meta.message = "Invalid user token!";
        return resultSuccess(null, meta, pageInfo);
      }

      meta.code = ResultEnum.SUCCESS;
      meta.success = true;
      meta.message = "ok";
      return resultSuccess(io_logstash_data, meta, pageInfo);
    },
  },
];
